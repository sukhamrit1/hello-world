a = int(input("Enter the number1: "))
print a
b=int(input("Enter the number2: "))
print b
c = int(input("Enter the number3: "))
print c


if ( a*a== b*b+c*c):
    print("a*a==b*b+c*c")
if (b*b==a*a+c*c):
    print("b*b==a*a+c*c")
if (c*c==a*a+b*b):
    print("c*c==a*a+c*c")

elif (a*a!=b*b+c*c) and (b*b!=a*a+c*c) and (c*c!=a*a+c*c):
    print("not possible")









(1)
user_number1 = int(input("Enter the number1: "))
print user_number1
user_number2=int(input("Enter the number2: "))
print user_number2
user_number3 = int(input("Enter the number3: "))
print user_number3
print("The greatest number is")
      
if user_number1 > user_number2:
    print user_number1
elif user_number2 > user_number3:
    print user_number2
else:
     user_number3 > user_number1
     print user_number3
     
     
     
     
     
     
     class Circle:
    def __init__(self, radius):
        self.radius = radius

    def setradius(self,newradius):
        self.radius = newradius
    def getarea(self):
        return  3.14 * self.radius ** 2

    def getperimeter(self):
        return 2 * 3.14*self.radius


firstCircle = Circle(5)
print("The area of Circle is " + str(firstCircle.getarea()))
print("The perimetr of Circle is " + str(firstCircle.getperimeter()))






myList = [1, 9, 5, 6, 14]

print(myList)

otherList = ['apple', 'orange', 'lemon']

mergelist = myList + otherList

print(otherList)

print(mergelist)

multList = myList * 2
print(multList)
selectedlist1 = multList[1:11:3]
print(selectedlist1)

selectedlist2 = multList[5:7]
print(selectedlist2)

Amrit = 18 in multList
print (Amrit)




week 9

EVENT

class event:
    def __init__(self,beg_hr, beg_min, end_hr, end_min, location, desc):
        self.beg_hr = beg_hr
        self.beg_min = beg_min
        self.end_hr = end_hr
        self.end_min = end_min
        self.desc = desc
        self.location = location

    def printevent(self):
        result = "From: " + str(self.beg_hr) + " : " + str(self.beg_min) + "\n"
        result += "To: " + str(self.beg_hr) + " : " + str(self.beg_min) + "\n"
        result += "description: " + self.desc +"\n"
        result += "location: "+ self.desc + "\n"
        result += "-----------------------------------------------------------"
        return result

class Day:
    def __init__(self, name):
        self.name = name
        self.events = []

    def addevent(self, event):
      self.events.append(event)

    def printEvents(self):

        for i in self.events:

            print(i.printevent())
            
            
            
            TEST
            
            
            
            
            from event import *

e = event(12, 10, 14, 10, "Cester", "Meeting with coop advisior")

e1 = event(22, 30, 22, 50, "Lambton", "Celebration")

e2 = event(10, 00, 11, 44, "Fairwell", "Movie")

#print(e.printevent())



d = Day ("Wednesday")
d.addevent(e)
d.addevent(e1)
d.addevent(e2)
d.printEvents()


